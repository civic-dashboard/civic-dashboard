name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        component: [data-fetcher, data-store, sync-elastic]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Cache Docker layers
        uses: actions/cache@v4.1.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: services/${{ matrix.component }}
          push: true
          load: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-helm:
    name: Test Helm Deployment
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set up Kind
        uses: helm/kind-action@v1.12.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'latest'

      - name: Verify Images Exist in Registry
        run: |
          echo "Verifying image existence in registry..."
          docker manifest inspect ghcr.io/${{ github.repository_owner }}/data-fetcher:${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }} || exit 1
          docker manifest inspect ghcr.io/${{ github.repository_owner }}/data-store:${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }} || exit 1
          docker manifest inspect ghcr.io/${{ github.repository_owner }}/sync-elastic:${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }} || exit 1
          echo "All images exist in the registry."

      - name: Helm Upgrade or Install
        uses: deliverybot/helm@v1.1.0
        with:
          release: civic-dashboard
          chart: ./civic-dashboard
          namespace: civic-dashboard
          atomic: true
          wait: true
          create-namespace: true
          cleanup-on-fail: true
          timeout: 300s
          values: |
            images.dataFetcher.repository=ghcr.io/${{ github.repository_owner }}/data-fetcher
            images.dataFetcher.tag=${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }}
            images.dataStore.repository=ghcr.io/${{ github.repository_owner }}/data-store
            images.dataStore.tag=${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }}
            images.syncElastic.repository=ghcr.io/${{ github.repository_owner }}/sync-elastic
            images.syncElastic.tag=${{ github.event_name == 'push' && 'main' || github.head_ref }}-${{ github.sha }}

      - name: Helm Test
        uses: deliverybot/helm@v1.1.0
        with:
          args: test civic-dashboard --namespace civic-dashboard
