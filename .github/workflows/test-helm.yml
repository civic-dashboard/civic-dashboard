name: Test Helm Deployment

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set up Kind
        uses: helm/kind-action@v1.12.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'latest'

      - name: Ensure Namespace Exists
        run: |
          kubectl get namespace civic-dashboard || kubectl create namespace civic-dashboard
        shell: bash

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install civic-dashboard ./civic-dashboard \
            --namespace civic-dashboard \
            --create-namespace \
            --atomic \
            --cleanup-on-fail \
            --timeout 300s \
            --values ./civic-dashboard/values.yaml
        shell: bash

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/civic-dashboard-elasticsearch -n civic-dashboard
          kubectl rollout status deployment/civic-dashboard-postgres -n civic-dashboard
          kubectl rollout status deployment/civic-dashboard-data-fetcher -n civic-dashboard
          kubectl rollout status deployment/civic-dashboard-data-store -n civic-dashboard
        shell: bash

      - name: Wait for Pods to be Ready
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=Running pod -l app.kubernetes.io/instance=civic-dashboard -n civic-dashboard --timeout=300s
        shell: bash

      - name: Probe Endpoints
        run: |
          echo "Probing endpoints..."
          kubectl run -n civic-dashboard curl-pod --image=curlimages/curl:latest --rm -i --restart=Never -- \
            sh -c "
              curl -f http://civic-dashboard-data-fetcher:5000/healthz
            "
          echo "All endpoints are healthy!"
        shell: bash
