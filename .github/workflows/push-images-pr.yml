name: Push Images (Pull Request)

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        component: [data-fetcher, data-store, sync-elastic]
        include:
          - component: data-fetcher
            path: "services/data-fetcher/**"
          - component: data-store
            path: "services/data-store/**"
          - component: sync-elastic
            path: "services/sync-elastic/**"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Filter Components by Path
        id: path-filter
        run: |
          echo "changed=${{ github.event.pull_request.changed_files }}" >> $GITHUB_ENV
          if ! echo "${{ github.event.pull_request.changed_files }}" | grep -q "${{ matrix.component }}"; then
            echo "skip=true" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: env.skip != 'true'

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        if: env.skip != 'true'

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: env.skip != 'true'

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: services/${{ matrix.component }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:pr-${{ github.event.number }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: env.skip != 'true'
